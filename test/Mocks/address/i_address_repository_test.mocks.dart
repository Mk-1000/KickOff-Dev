// Mocks generated by Mockito 5.4.0 from annotations
// in takwira/test/Mocks/address/i_address_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:takwira/domain/entities/Address.dart' as _i2;
import 'package:takwira/domain/repositories/IAddressRepository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAddress_0 extends _i1.SmartFake implements _i2.Address {
  _FakeAddress_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IAddressRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAddressRepository extends _i1.Mock
    implements _i3.IAddressRepository {
  MockIAddressRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Address>> getAllAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getAllAddresses,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Address>>.value(<_i2.Address>[]),
      ) as _i4.Future<List<_i2.Address>>);
  @override
  _i4.Future<_i2.Address> getAddressById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getAddressById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #getAddressById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Address>);
  @override
  _i4.Future<void> addAddress(_i2.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [address],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> updateAddress(_i2.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [address],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteAddress(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
